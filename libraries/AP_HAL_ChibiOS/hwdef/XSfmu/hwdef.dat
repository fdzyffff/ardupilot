# hw definition file for processing by chibios_hwdef.py for RocDrone H7

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 16000000

# board ID for firmware load
APJ_BOARD_ID 777

FLASH_SIZE_KB 2048

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

# ChibiOS system timer
STM32_ST_USE_TIMER 2

# bootloader takes first sector
FLASH_RESERVE_START_KB 128

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART1 USART3 USART2 UART4 UART5 USART6 UART7 UART8 OTG2

# default the 2nd interface to MAVLink2 until MissionPlanner updates drivers
define HAL_OTG2_PROTOCOL SerialProtocol_MAVLink2

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 - internal imu sensors, ICM-42688-P
PA5 SPI1_SCK SPI1
PG9 SPI1_MISO SPI1
PD7 SPI1_MOSI SPI1

# SPI2 - FRAM, FM25V05
PI1 SPI2_SCK SPI2
PC2 SPI2_MISO SPI2
PC3 SPI2_MOSI SPI2

# SPI3 - MAG, RM3100
PB3 SPI3_SCK SPI3
PB4 SPI3_MISO SPI3
PB2 SPI3_MOSI SPI3

# SPI4 - internal barometer, MS5611
PE2 SPI4_SCK SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# SPI5 - internal imu sensors, ADIS16470
PF7 SPI5_SCK SPI5
PF8 SPI5_MISO SPI5
PF9 SPI5_MOSI SPI5

PF5 ADIS16470_CS CS
PD6 ICM42688_CS CS
PI2 FRAM_CS CS SPEED_VERYLOW
PE3 MS5611_CS CS
PI7 RM3100_CS CS

# I2C buses

# I2C1 for onboard mag
PB8 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# I2C2 for external devices
PF1 I2C2_SCL I2C2
PF0 I2C2_SDA I2C2

# I2C3
PH7 I2C3_SCL I2C3
PH8 I2C3_SDA I2C3

# order of I2C buses
I2C_ORDER I2C1 I2C2 I2C3

define HAL_I2C_INTERNAL_MASK 1

# enable pins
PC13 VDD_3V3_SENSORS_EN OUTPUT LOW
PC14 VDD_3V3_SD_CARD_EN OUTPUT HIGH

# USART1 is telem1
PB15 USART1_RX USART1
PB14 USART1_TX USART1

# USART3 is telem2
PD9  USART3_RX USART3 NODMA
PB10 USART3_TX USART3 NODMA

# USART2 is GPS1
PA3 USART2_RX USART2 NODMA
PD5 USART2_TX USART2 NODMA

# UART4 is GPS2
PH14 UART4_RX UART4
PD1  UART4_TX UART4

# UART5
PB12 UART5_RX UART5 NODMA
PB13 UART5_TX UART5 NODMA

# USART6
PC7  USART6_RX USART6 NODMA
PG14 USART6_TX USART6 NODMA

# UART7
PF6 UART7_RX UART7 NODMA
PE8 UART7_TX UART7 NODMA

# UART8
PE0 UART8_RX UART8 NODMA
PE1 UART8_TX UART8 NODMA

# PWM channels
PA0  TIM5_CH1 TIM5 PWM(1) GPIO(50)
PH11 TIM5_CH2 TIM5 PWM(2) GPIO(51)
PH12 TIM5_CH3 TIM5 PWM(3) GPIO(52)
PI0  TIM5_CH4 TIM5 PWM(4) GPIO(53)
PD12 TIM4_CH1 TIM4 PWM(5) GPIO(54)
PD13 TIM4_CH2 TIM4 PWM(6) GPIO(55)
PD14 TIM4_CH3 TIM4 PWM(7) GPIO(56)
PD15 TIM4_CH4 TIM4 PWM(8) GPIO(57)

PE9  TIM1_CH1  TIM1  PWM(9)  GPIO(58)
PE11 TIM1_CH2  TIM1  PWM(10) GPIO(59)
PE13 TIM1_CH3  TIM1  PWM(11) GPIO(60)
PE14 TIM1_CH4  TIM1  PWM(12) GPIO(61)
PH6  TIM12_CH1 TIM12 PWM(13) GPIO(62) NODMA
PH9  TIM12_CH2 TIM12 PWM(14) GPIO(63) NODMA

PI5  TIM8_CH1  TIM8  PWM(15) GPIO(64)
PI6  TIM8_CH2  TIM8  PWM(16) GPIO(65)

# allow for 14 PWMs by default
define BOARD_PWM_COUNT_DEFAULT 16

# RC input
PC6 TIM3_CH1 TIM3 RCININT PULLUP LOW 

# analog in
PF11 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PA6  VDD_5V_SENS ADC1 SCALE(2)

# external ADC1„ÄÅ external ADC2
PB1 SPARE1_ADC1 ADC1 SCALE(5.66667)
PC0 SPARE2_ADC1 ADC1 SCALE(5.66667)

# CAN bus
PI9  CAN1_RX CAN1
PH13 CAN1_TX CAN1

# 2nd CAN bus
PB5  CAN2_RX CAN2
PB6  CAN2_TX CAN2

# control for silent (no output) for CAN
PI10 GPIO_CAN1_SILENT OUTPUT PUSHPULL SPEED_LOW LOW GPIO(70)
PG15 GPIO_CAN2_SILENT OUTPUT PUSHPULL SPEED_LOW LOW GPIO(71)

PA9 VBUS INPUT OPENDRAIN

# drdy pins
PF4  DRDY1_ADIS16470 INPUT GPIO(93)
PB11 DRDY2_RM3100 INPUT

# use GPIO(93) for data ready on ADIS16470
define ADIS_DRDY_PIN 93

# SPI devices
SPIDEV adis16470      SPI5 DEVID1  ADIS16470_CS    MODE3  1*MHZ  2*MHZ
SPIDEV icm42688       SPI1 DEVID1  ICM42688_CS     MODE3  2*MHZ  8*MHZ
SPIDEV ms5611         SPI4 DEVID1  MS5611_CS       MODE3  20*MHZ 20*MHZ
SPIDEV ramtron        SPI2 DEVID1  FRAM_CS         MODE3  8*MHZ  8*MHZ 
SPIDEV rm3100         SPI3 DEVID1  RM3100_CS       MODE3  2*MHZ  8*MHZ

# one baro
BARO MS56XX SPI:ms5611

# two IMUs
IMU ADIS1647x    SPI:adis16470 ROTATION_PITCH_180_YAW_270 ADIS_DRDY_PIN
IMU Invensensev3 SPI:icm42688 ROTATION_PITCH_180

define HAL_DEFAULT_INS_FAST_SAMPLE 5

# compasses
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
COMPASS IST8310 I2C:ALL_EXTERNAL:0x0E true  ROTATION_ROLL_180_YAW_90

COMPASS RM3100 SPI:rm3100 false ROTATION_NONE

# microSD support
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1

# enable RAMTROM parameter storage
define HAL_STORAGE_SIZE 32768
define HAL_WITH_RAMTRON 1

# enable FAT filesystem support (needs a microSD defined via SDMMC)
define HAL_OS_FATFS_IO 1

define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

DMA_PRIORITY  ADC* SPI5* TIM*UP*
DMA_NOSHARE  SPI5* TIM*UP* 
